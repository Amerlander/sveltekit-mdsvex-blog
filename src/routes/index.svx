<script context="module">
	import { slugFromPath } from '$lib/util';
	import LayoutLoader from '$lib/layouts/LayoutLoader.svelte'

	/**
	 * @type {import('@sveltejs/kit').Load}
	 */
	export async function load({ url, fetch, params }) {

		const subJson = await fetch('/index.json').then((res) => res.json());
		
		let _subpages = [];
		for (const page of subJson) {
			const pageJson = await fetch(`/${page.slug}.json`).then((res) => res.json());
			_subpages[page.slug] = pageJson;
		}

		let Page;

		const pages = await import.meta.globEager(`../content/index{.,.de.,.en.}{md,svx}`);
		let match;
        for (const [path, resolver] of Object.entries(pages)) {
            if (slugFromPath(path) === 'index') {
                match = [path, resolver];
                break;
            }
        }

        if (!match) {
            return {
                status: 404
            };
        }
		
	    Page = match[1].default;
		let meta = match[1].metadata ?? {}		

		return {
			props: {
				Page,
				meta,
				_subpages
			}
		};
	}
</script>

<script>
	export let Page;
	export let meta;
	export let _subpages;
</script>

<LayoutLoader {meta}>
	<svelte:component this={Page} {_subpages} />
</LayoutLoader>